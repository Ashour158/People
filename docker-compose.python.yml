version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hr_postgres
    environment:
      POSTGRES_DB: hr_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hr_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hr_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hr_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python Backend API (FastAPI)
  python_backend:
    build:
      context: ./python_backend
      dockerfile: Dockerfile
    container_name: hr_python_backend
    environment:
      APP_NAME: "HR Management System"
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DEBUG: ${DEBUG:-true}
      PORT: 5000
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-postgres}@postgres:5432/hr_system
      REDIS_URL: redis://redis:6379/0
      REDIS_ENABLED: "true"
      SECRET_KEY: ${SECRET_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      CORS_ORIGINS: '["http://localhost:3000","http://localhost:5173"]'
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./python_backend/uploads:/app/uploads
      - ./python_backend/logs:/app/logs
    networks:
      - hr_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 5000

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${API_BASE_URL:-http://localhost:5000/api/v1}
    container_name: hr_frontend
    ports:
      - "3000:80"
    depends_on:
      - python_backend
    networks:
      - hr_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  hr_network:
    driver: bridge
